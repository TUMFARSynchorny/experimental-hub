"""Provide the `SessionDict` TypedDict.

Use for type hints and static type checking without any overhead during runtime.
"""

from typing import Any, TypedDict
from typing_extensions import NotRequired

from custom_types.participant import ParticipantDict
from custom_types.note import NoteDict


class SessionDict(TypedDict):
    """TypedDict for session configuration data.

    Attributes
    ----------
    id : str, optional
        Unique session id generated by the backend after saving the session.  When
        creating a new session, this field is initially left blank by the client.
        Read only for client.
    title : str
        Experiment title.
    description : str
        Experiment description.
    date : int
        Planned starting date / time of the experiment in milliseconds since January 1,
        1970, 00:00:00 (UTC).
    time_limit : int
        Experiment time limit in milliseconds since January 1, 1970, 00:00:00 (UTC).
    record : bool
        Whether the experiment is to be recorded.
    participants : list of custom_types.participant.ParticipantDict
        List of invited participants.
    start_time : int, optional
        Time the experiment started in milliseconds since January 1, 1970, 00:00:00
        (UTC).  Read only for client.
    end_time : int, optional
        Time the experiment ended in milliseconds since January 1, 1970, 00:00:00 (UTC).
        Read only for client.
    notes : list of custom_types.note.NoteDict
        List of `NoteDict`s the experimenter added during the experiment.  Read only for
        client.
    log : Any, optional
        Log created by the backend.  Read only for client.

    See Also
    --------
    Data Types Wiki :
        https://github.com/TUMFARSynchorny/experimental-hub/wiki/Data-Types#session
    """

    id: NotRequired[str]
    title: str
    description: str
    date: int
    time_limit: int
    record: bool
    participants: list[ParticipantDict]
    start_time: NotRequired[int]
    end_time: NotRequired[int]
    notes: list[NoteDict]
    log: NotRequired[Any]
